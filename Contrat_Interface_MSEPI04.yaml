openapi: 3.0.1
info:
  version: 1.0.0
  title: MSEPI04
  description: API for using EPI directory features
  contact:
    name: SNI / FIP / PAY / GIP / MOE
    email: LDD_LCL_SNI_PAY_GIP_MOE@lcl.fr
servers:
  - url: 'https://rct-msepi01.hors-prod.caas.lcl.gca'
  - url: 'https://dvl-msepi01.hors-prod.caas.lcl.gca'
paths:
  '/p2p_payments/{p2p_payment_id}/status':
    get:
      tags:
        - P2P Payment
      summary: Endpoint for EPI/WERO to query about the status of a P2P payment
      parameters:
        - name: Correlationid
          in: header
          required: false
          description: Unique correlation identifier to trace the request.
          schema:
            type: string
            format: uuid
        - name: p2p_payment_id
          in: path
          required: true
          description: Unique P2P Payment Id (as assigned by EPI)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Response related to the status of a known or unknown P2P payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentStatusResponse'
              examples:
                Initial:
                  value:
                    value: Initial
                Approved:
                  value:
                    value: Approved
                Accepted:
                  value:
                    value: Accepted
                    at: '2024-09-27T07:39:41Z'
                Failed:
                  value:
                    value: Failed
                    at: '2024-09-27T07:39:41Z'
                    failure_code: AC04
                    failure_reason: Closed Account Number
                Settled:
                  value:
                    value: Settled
                    at: '2024-09-27T07:39:41Z'
                    originator_psp_reference: 4021e7e1825c4019976b93eff85196e3
                Rejected:
                  value:
                    value: Rejected
                    at: '2024-09-27T07:39:41Z'
                    rejection_reason: Unspecified
                Unknown:
                  value:
                    value: Unknown
        '400':
          description: Invalid or missing data in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Client application is not authorized to access this service.
        '500':
          description: Server internal technical error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /p2p_payments:
    post:
      tags:
        - P2P Payment
      summary: Initiate a P2P payment on EPI and check SCT INST feasibility
      parameters:
        - name: Correlationid
          in: header
          required: true
          description: Unique correlation identifier to trace the request.
          schema:
            type: string
            format: uuid
        - name: Context-Acquisition-Channel
          in: header
          required: true
          description: Acquisition channel identifier.
          schema:
            type: string
            enum:
              - IN
              - MO
        - name: Context-User-Profile-Code
          in: header
          required: true
          description: User profile code.
          schema:
            type: string
            enum:
              - L
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentRequest'
      responses:
        '201':
          description: Payment succesfully initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentResponse'
        '400':
          description: Invalid or missing data in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Client is not authorized to access this service.
        '422':
          description: >-
            Request is valid but cannot be processed by an underlying service
            (see message for more details).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: EXT0000
                message: >-
                  La requête ne peut pas être traitée par CAPS. Cause :
                  {message_returned_by_caps}
        '500':
          description: Server internal technical error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/p2p_payments/{p2p_payment_id}':
    put:
      tags:
        - P2P Payment
      summary: Register a P2P payment in mirror database and check SCT INST feasibility
      description: >-
        If a P2P money request identifier is present, it will retrieve the data
        from the P2P request in the database.
      parameters:
        - name: Correlationid
          in: header
          required: true
          description: Unique correlation identifier to trace the request.
          schema:
            type: string
            format: uuid
        - name: Context-Acquisition-Channel
          in: header
          required: true
          description: Acquisition channel identifier.
          schema:
            type: string
            enum:
              - IN
              - MO
        - name: Context-User-Profile-Code
          in: header
          required: true
          description: User profile code.
          schema:
            type: string
            enum:
              - L
        - name: p2p_payment_id
          in: path
          required: true
          description: Unique P2P Payment Id.
          schema:
            type: string
            format: uuid
        - name: p2p_money_request_id
          in: query
          description: Unique identifier of the related P2P money request.
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Payment succesfully initiated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutPaymentResponse'
        '400':
          description: Invalid or missing data in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Client is not authorized to access this service.
        '409':
          description: The P2P payment with the provided id already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Request is valid but cannot be processed by an underlying service
            (see message for more details).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: EXT0000
                message: >-
                  La requête ne peut pas être traitée par CAPS. Cause :
                  {message_returned_by_caps}
        '500':
          description: Server internal technical error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - P2P Payment
      summary: Approve a SCT INST generation related to a given P2P Payment
      parameters:
        - name: Correlationid
          in: header
          required: true
          description: Unique correlation identifier to trace the request.
          schema:
            type: string
            format: uuid
        - name: Context-Acquisition-Channel
          in: header
          required: true
          description: Acquisition channel identifier.
          schema:
            type: string
            enum:
              - IN
              - MO
        - name: Context-User-Profile-Code
          in: header
          required: true
          description: User profile code.
          schema:
            type: string
            enum:
              - L
        - name: p2p_payment_id
          in: path
          required: true
          description: Unique P2P Payment Id.
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPaymentRequest'
            examples:
              Approved:
                value:
                  status: Approved
                  authentication_datetime: '2024-08-07T10:37:00Z'
                  risk_analysis_data:
                    customer_application: CLI
                    ceiling: 1000
                    partner_id: 01234567891
                    login_id: '112211221122'
                    strong_authentication: 1
                    ip_address: 127.000.000.000
                    user_agent: >-
                      Mes Comptes - LCL/5.19.2 (Android 13; REA-NX9; HONOR;
                      HNREA)
                  trusteer_analysis:
                    status: OK
                    score: 50
              Rejected:
                value:
                  status: Rejected
      responses:
        '200':
          description: Payment succesfully sent for settlement through SCT INST.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchPaymentResponse'
        '400':
          description: Invalid or missing data in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Client is not authorized to access this service.
        '403':
          description: User is not authorized to execute this payment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Le paiement n'existe pas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: >-
            Request is valid but cannot be processed by an underlying service
            (see message for more details).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: EXT0000
                message: >-
                  La requête ne peut pas être traitée par CAPS. Cause :
                  {message_returned_by_caps}
        '500':
          description: Server internal technical error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - P2P Payment
      summary: Get details of a sent or received P2P Payment
      parameters:
        - name: Correlationid
          in: header
          required: true
          description: Unique correlation identifier to trace the request.
          schema:
            type: string
            format: uuid
        - name: Context-Client-Id
          in: header
          required: true
          description: >-
            Unique identifier of the other service which is calling this
            service. It is is provided by the reverse-proxy.
          schema:
            type: string
        - name: Context-Distribution-Portal-Code
          in: header
          required: true
          description: The code of the distribution portal used by the user.
          schema:
            type: string
            minimum: 2
            maximum: 2
            enum:
              - '00'
              - '01'
              - '02'
              - '03'
              - '04'
              - '05'
              - '06'
              - '07'
              - 08
              - 09
              - '10'
              - '11'
              - '12'
              - '13'
              - '14'
              - '15'
              - '16'
              - '17'
              - '18'
              - '19'
              - '20'
              - '99'
        - name: Context-User-Id
          in: header
          required: true
          description: >-
            Unique identifier of the person who's calling the service. Can be
            null if the caller is the system. It will contains the numtecprs
          schema:
            type: string
            example: 6000000201
        - name: p2p_payment_id
          in: path
          required: true
          description: Unique P2P Payment Id assigned by EPI/WERO.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: P2P Payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetP2pPaymentDetailsResponse'
              examples:
                P2PPaymentReceived:
                  summary: Received P2P Payment details
                  value:
                    id: a6d1d59a-922d-4c8e-aab4-872940573253
                    amount: 51.1
                    currency: EUR
                    title: "\U0001F4B5\U0001F44D"
                    message: "Message avec \U0001F60E\U0001F981"
                    created_at: '2024-12-31T10:10:39.475Z'
                    updated_at: '2024-12-31T10:10:39.475Z'
                    payment_reference: GLSI-1246342
                    viewer_type: Payee
                    viewer_iban: FR5030002003900000019557R24
                    status:
                      value: Settled
                      display_value: PaymentSettled
                    counterparty_contact:
                      display_name: Jean T***
                      proxy_value: '+33615748596'
                      pro: false
                P2PPaymentSent:
                  summary: Sent P2P Payment details
                  value:
                    id: a6d1d59a-922d-4c8e-aab4-872940573253
                    amount: 300
                    currency: EUR
                    title: "\U0001F527"
                    message: "Règlement facture \U0001F527"
                    created_at: '2024-12-31T10:10:39.475Z'
                    updated_at: '2024-12-31T10:10:39.475Z'
                    payment_reference: GLSI-1246342
                    viewer_type: Payer
                    viewer_iban: FR5030002003900000019557R24
                    status:
                      value: Settled
                      display_value: PaymentSettled
                    counterparty_contact:
                      display_name: Pro Pro
                      proxy_value: contact@entreprisepro.fr
                      pro: true
        '400':
          description: Invalid or missing data in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Client application is not authorized to access this service.
        '404':
          description: P2P Payment details not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server internal technical error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    GetPaymentStatusResponse:
      type: object
      properties:
        value:
          type: string
          enum:
            - Initial
            - Approved
            - Accepted
            - Failed
            - Settled
            - Rejected
            - Unknown
          description: Status code (provided whatever the P2P payment status).
        at:
          type: string
          format: date-time
          description: >-
            UTC Date and time of the status modification. (Provided only when
            payment status is Failed, Rejected or Settled)
        failure_code:
          type: string
          description: >-
            Failure code (external code of R004, ExternalStatusReason1Code).
            (Provided only if the payment statut is Failed.)
        failure_reason:
          type: string
          description: >-
            Failure reason (proprietary reason R004). (Provided only if the
            payment status is Failed.)
        originator_psp_reference:
          type: string
          description: >-
            Originator PSP s reference for the original payment request (TO54,
            pacs.008 Instruction identifier). (Provided only if the payment
            status is Settled.)
        rejection_reason:
          type: string
          description: >-
            Reason for the rejection. In our case, it will always be set at
            Unspecified. (Provided only if the payment status is Rejected.)
        rejection_message:
          type: string
          description: >-
            Detailed description of the rejection reason from the PSP. This
            description will be forwarded as-is to the payer. (Providable only
            if the payment status is Rejected. In our case, it will not be used
            because this data is optional on EPI side.)
      required:
        - value
    Device:
      type: object
      description: >-
        Optional device telemetry data ("device fingerprint") of the device used
        by the consumer, as reported by the wallet application and forwarded "as
        provided" to EPI when initiating the P2P Payment
      properties:
        id:
          type: string
          description: >-
            The unique device identifier of the device used by the consumer.
            Note: Formats differ (UUID on iOS vs. 64-bit hex string on Android).
        ip_address:
          type: string
          description: The IPv4 or IPv6 address of the consumers device
        user_agent:
          type: string
          description: >-
            The user agent string of the device used by the consumer. This will
            often contain information redundantly captured in the deviceOs and
            deviceModel properties
        model:
          type: string
          description: The model of the device used by the consumer
        screen_resolution:
          type: string
          description: >-
            The screen resolution of the device used by the consumer, in pixels
            (width x height)
        cellular_providers:
          type: string
          description: >-
            The cellular provider(s) of the device used by the consumer. This is
            a comma-separated list of the names of the cellular providers
        location:
          type: string
          description: >-
            The location of the device used by the consumer. This is a
            comma-separated list of the latitude and longitude of the device
        time:
          type: string
          description: 'The time on the device used by the consumer, in ISO 8601 format.'
        time_zone:
          type: string
          description: The time zone of the device used by the consumer.
        os:
          type: string
          description: The operating system of the device used by the consumer.
        language:
          type: string
          description: 'The language of the device used by the consumer. (ie: fr_FR, en_US)'
    AccountIdentification:
      type: object
      properties:
        type:
          type: string
          enum:
            - Iban
            - ProxyHash
            - ShareId
          description: >-
            Only IBAN is authorized for debtor account type. ProxyHash and
            ShareId are authorized for creditor account type.
        value:
          type: string
          description: Value related to the account identification type
    TrusteerAnalysis:
      type: object
      description: >-
        Trusteer check status and scoring for fraud management ; provided by the
        requestor and forwarded as provided to GDR (through CAPS).
      properties:
        status:
          type: string
          enum:
            - OK
            - KO
            - KOF
            - KONF
          description: '"OK", "KO", "KOF" (Functional KO), "KONF" (Non Functional KO)'
        score:
          type: number
          description: Provided only when trusteer_call_status OK
          minimum: 0
          maximum: 9999
    CreatePaymentRequest:
      type: object
      properties:
        title:
          type: string
          description: >-
            Message title (text or UTF-8 emojis) on 3 chars forwarded to the
            beneficiary through EPI
        message:
          type: string
          description: >-
            Free text message title (text with or without UTF-8 emojis) on 250
            chars forwarded to the beneficiary through EPI.<br>When provided, it
            is transformed by EPI to a SEPA compliant remittance information
            message used for SCT INST exchange
        amount:
          type: number
          format: decimal
          example: 1.23
          description: P2P Payment amount in Euros
        originator_id:
          type: number
          example: 1234567890
          description: Originator / Debtor Numtecprs
        debtor_account_identifier:
          allOf:
            - $ref: '#/components/schemas/AccountIdentification'
          example:
            type: Iban
            value: FR76000000000000000000A00
        creditor_account_identifier:
          allOf:
            - $ref: '#/components/schemas/AccountIdentification'
          example:
            type: ProxyHash
            value: PZGI4MTD8kVdbysQMF8ztCykGY87PLIhrg-1qfxPPrg=
        device:
          $ref: '#/components/schemas/Device'
    PutPaymentRequest:
      type: object
      properties:
        origin:
          type: string
          description: The origin of the payment.
          enum:
            - P2PRequest
            - P2POpenRequest
        originator_id:
          type: number
          example: 1234567890
          description: Originator / Debtor Numtecprs
        debtor_account_identifier:
          allOf:
            - $ref: '#/components/schemas/AccountIdentification'
          example:
            type: Iban
            value: FR76000000000000000000A00
    GetP2pPaymentDetailsResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: a6d1d59a-922d-4c8e-aab4-872940573253
          description: Unique P2P Payment Id
        amount:
          type: number
          format: double
          example: 51.11
          description: P2P Payment amount
        currency:
          type: string
          example: EUR
          description: Amount currency (ISO4217).
        title:
          type: string
          example: "\U0001F4B5"
          description: Message title (text or UTF-8 emojis) on 3 chars
        message:
          type: string
          example: "Ta participation au \U0001F381"
          description: Free text message (text with or without UTF-8 emojis) on 250 chars.
        created_at:
          type: string
          example: '2024-12-31T10:10:39.475Z'
          description: >-
            Date and time at which the P2P payment has been created. (Format:
            UTC Timestamp)
        updated_at:
          type: string
          example: '2024-12-31T10:10:39.475Z'
          description: >-
            Date and time at which the P2P payment  has been updated. (Format:
            UTC Timestamp)
        payment_reference:
          type: string
          maxLength: 140
          description: >-
            For P2Pro usage only<br>Payment reference with SEPA compliant
            characters used in the SCT Inst remittance information
        viewer_type:
          type: string
          description: Type of viewer
          enum:
            - Payer
            - Payee
        viewer_iban:
          type: string
          description: Viewer (Payee or payer) account when applicable
          example: FR5030002003900000019557R24
        status:
          type: object
          description: P2P Payment status
          properties:
            value:
              description: EPI/WERO original status
              type: string
              enum:
                - Initial
                - Canceled
                - Approved
                - Accepted
                - Rejected
                - Settled
                - Failed
                - Expired
            display_value:
              type: string
              description: Status displayed on frontend application
              enum:
                - Awaiting
                - PaymentSettled
                - PaymentFailed
              example: PaymentSettled
        counterparty_contact:
          type: object
          description: >-
            Contact details about the counterparty <br>(payer or payee depending
            on who is retrieving the details)
          properties:
            display_value:
              type: string
              description: >-
                The consumer's name. Depending on the consumer's personal
                choice, the consumer name is either the full name as provided by
                the consumer PSP or an obfuscated name in the form of a
                pseudonym or masked name.
              example: Jean T***
            proxy_value:
              type: string
              description: Proxy value (non hashed) linked to that consumer.
              example: '+33612321232'
            pro:
              type: boolean
              example: true
              description: >-
                Indicates whether the payment source linked to the consumer is a
                business account (P2Pro).
          required:
            - display_value
      required:
        - id
        - viewer_type
        - status
        - created_at
        - counterparty_contact
    CreatePaymentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: >-
            Unique P2P Payment Id assigned by EPI to the to be approved by
            customer payment
        creditor_account_country_code:
          type: string
          example: FR
          description: Beneficiary account country code
    PatchPaymentRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - Approved
            - Rejected
        authentication_datetime:
          type: string
          format: date-time
        risk_analysis_data:
          $ref: '#/components/schemas/RiskAnalysisData'
        trusteer_analysis:
          $ref: '#/components/schemas/TrusteerAnalysis'
    PatchPaymentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: P2P Payment Id of the executed P2P payment
        lcl_transaction_id:
          type: string
          description: LCL transaction identifier (VIRINST id)
    PutPaymentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: >-
            Unique P2P Payment Id assigned by EPI to the to be approved by
            customer payment
        creditor_account_country_code:
          type: string
          example: FR
          description: Beneficiary account country code
        creditor_account:
          type: string
          example: FR76000000000000000000A00
          description: >-
            Only present when approving a money request<br>Creditor IBAN account as provided by EPI/WERO used for LCL anti-fraud checks (because the beneficiary proxy is not provided while approving the money request)
    RiskAnalysisData:
      type: object
      description: >-
        Provided by the requestor and forwarded as provided to GDR (through
        CAPS).<br>Equivalent to "additional_data" tag sent on WSCTXD01 for
        Paylib or standard SCT/SCT-Inst
      properties:
        communication_technique:
          type: string
          maxLength: 3
          description: >-
            TBD, Paylib, API (DSP2) Fax, face to face (if application
            acquisition = TP Agence)
        customer_application:
          type: string
          maxLength: 4
          description: 'Value: "CLI" (LCL Mes Comptes), "MKRT", PISP-NomTPP, MABQ, API'
        ceiling:
          type: number
          description: Customer ceiling for the current transaction
        recipient_alias:
          type: string
          maxLength: 60
          description: Recipient/beneficiary mobile number or email address (non hashed)
        partner_id:
          type: string
          maxLength: 14
          description: Originator partner id (numtecprs)
        login_id:
          type: string
          maxLength: 64
          description: Username used to login (BELPP app user identifier)
        strong_authentication:
          type: string
          maxLength: 1
          description: >-
            "0" = No / "1" = Yes / "2" = strong authentication method 1 / "3" =
            strong authentication method 2
        imei:
          type: string
          maxLength: 15
          description: Mobile phone identification number for "LCL Mes Comptes" application
        ip_address:
          type: string
          maxLength: 39
          description: IPV4/v6 address
        user_agent:
          type: string
          maxLength: 130
          description: >-
            Details about the sender such as the application name and version,
            the operating system, etc.
        edi_requestor:
          type: string
          maxLength: 8
          description: Only for transactions file
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string